// <auto-generated />
using System;
using Coolbuh.Core.DataAccess.MsSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coolbuh.Core.DataAccess.MsSql.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220416132533_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.AdditionalAccrual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<int>("AdditionalAccrualTypeId")
                        .HasColumnType("int")
                        .HasColumnName("additionalAccrualTypeId");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentId");

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalAccrualTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCardId");

                    b.HasIndex(new[] { "AccountingPeriod" }, "IX_AdditionalAccruals_AccountingPeriod");

                    b.HasIndex(new[] { "AccountingPeriod", "DepartmentId" }, "IX_AdditionalAccruals_AccountingPeriod_DepartmentId");

                    b.ToTable("AdditionalAccruals", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.AdditionalPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<int>("AdditionalPaymentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("additionalPaymentTypeId");

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalPaymentTypeId");

                    b.HasIndex("EmployeeCardId");

                    b.HasIndex(new[] { "AccountingPeriod" }, "IX_AdditionalPayments_AccountingPeriod");

                    b.HasIndex(new[] { "AccountingPeriod", "AdditionalPaymentTypeId" }, "IX_AdditionalPayments_AccountingPeriod_AdditionalPaymentTypeId");

                    b.ToTable("AdditionalPayments", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ApplicationSetting", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int?>("DigitValue")
                        .HasColumnType("int")
                        .HasColumnName("digitValue");

                    b.Property<string>("StringValue")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("stringValue");

                    b.HasKey("Type");

                    b.ToTable("ApplicationSettings", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.CivilLawContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<DateTime>("AccrualPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accrualPeriod");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentId");

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCardId");

                    b.HasIndex(new[] { "AccountingPeriod" }, "IX_CivilLawContracts_AccountingPeriod");

                    b.HasIndex(new[] { "AccountingPeriod", "DepartmentId" }, "IX_CivilLawContracts_AccountingPeriod_DepartmentId");

                    b.ToTable("CivilLawContracts", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ConsolidateReportAppendix1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<int>("AccrualMonth")
                        .HasColumnType("int")
                        .HasColumnName("accrualMonth");

                    b.Property<decimal>("AccrualTotalSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("accrualTotalSum");

                    b.Property<int>("AccrualTypeCode")
                        .HasColumnType("int")
                        .HasColumnName("accrualTypeCode");

                    b.Property<decimal>("AccrualUniformPaymentSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("accrualUniformPaymentSum");

                    b.Property<int>("AccrualYear")
                        .HasColumnType("int")
                        .HasColumnName("accrualYear");

                    b.Property<int>("CategoryCode")
                        .HasColumnType("int")
                        .HasColumnName("categoryCode");

                    b.Property<int>("ConsolidateReportCatalogId")
                        .HasColumnType("int")
                        .HasColumnName("consolidateReportCatalogId");

                    b.Property<decimal>("DifferenceSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("differenceSum");

                    b.Property<int>("EmploymentDays")
                        .HasColumnType("int")
                        .HasColumnName("employmentDays");

                    b.Property<string>("FirstName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("firstName");

                    b.Property<bool>("IsExistWorkBook")
                        .HasColumnType("bit")
                        .HasColumnName("isExistWorkBook");

                    b.Property<bool>("IsNewWorkplace")
                        .HasColumnType("bit")
                        .HasColumnName("isNewWorkplace");

                    b.Property<bool>("IsPartTimeWork")
                        .HasColumnType("bit")
                        .HasColumnName("isPartTimeWork");

                    b.Property<bool>("IsSpecialSeniority")
                        .HasColumnType("bit")
                        .HasColumnName("isSpecialSeniority");

                    b.Property<bool>("IsUkraineNationality")
                        .HasColumnType("bit")
                        .HasColumnName("isUkraineNationality");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("lastName");

                    b.Property<int>("MaternityLeaveDays")
                        .HasColumnType("int")
                        .HasColumnName("maternityLeaveDays");

                    b.Property<decimal>("MaxAccrualTotalSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("maxAccrualTotalSum");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("middleName");

                    b.Property<int>("Sex")
                        .HasColumnType("int")
                        .HasColumnName("sex");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("taxIdentificationNumber");

                    b.Property<int>("TemporaryDisabilityDays")
                        .HasColumnType("int")
                        .HasColumnName("temporaryDisabilityDays");

                    b.Property<decimal>("WithholdingUniformPaymentSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("withholdingUniformPaymentSum");

                    b.Property<int>("WithoutSalaryDays")
                        .HasColumnType("int")
                        .HasColumnName("withoutSalaryDays");

                    b.HasKey("Id");

                    b.HasIndex("ConsolidateReportCatalogId");

                    b.ToTable("ConsolidateReportAppendix1s", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ConsolidateReportAppendix4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<decimal>("AccrualIncomeSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("accrualIncomeSum");

                    b.Property<decimal>("AccrualTaxSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("accrualTaxSum");

                    b.Property<decimal>("AccrualWarTaxSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("accrualWarTaxSum");

                    b.Property<int>("ConsolidateReportCatalogId")
                        .HasColumnType("int")
                        .HasColumnName("consolidateReportCatalogId");

                    b.Property<DateTime>("DismissalDate")
                        .HasColumnType("date")
                        .HasColumnName("dismissalDate");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date")
                        .HasColumnName("entryDate");

                    b.Property<int>("FirmType")
                        .HasColumnType("int")
                        .HasColumnName("firmType");

                    b.Property<int>("FirmUSREOU")
                        .HasMaxLength(250)
                        .HasColumnType("int")
                        .HasColumnName("firmUSREOU");

                    b.Property<string>("FirstName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("firstName");

                    b.Property<int>("IncomeSign")
                        .HasColumnType("int")
                        .HasColumnName("incomeSign");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("lastName");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("middleName");

                    b.Property<decimal>("PaidIncomeSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("paidIncomeSum");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("taxIdentificationNumber");

                    b.Property<int>("TaxReliefSign")
                        .HasColumnType("int")
                        .HasColumnName("taxReliefSign");

                    b.Property<decimal>("TransferTaxSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("transferTaxSum");

                    b.Property<decimal>("TransferWarTaxSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("transferWarTaxSum");

                    b.HasKey("Id");

                    b.HasIndex("ConsolidateReportCatalogId");

                    b.ToTable("ConsolidateReportAppendix4s", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ConsolidateReportAppendix6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("datetime2");

                    b.Property<int>("ConsolidateReportCatalogId")
                        .HasColumnType("int");

                    b.Property<int>("DayRate")
                        .HasColumnType("int");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HourRate")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<bool>("IsUkraineNationality")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinuteRate")
                        .HasColumnType("int");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.Property<int>("PeriodStartDay")
                        .HasColumnType("int");

                    b.Property<int>("PeriodStopDay")
                        .HasColumnType("int");

                    b.Property<string>("ReasonCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonSign")
                        .HasColumnType("int");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsolidateReportCatalogId");

                    b.ToTable("ConsolidateReportAppendixes6");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ConsolidateReportCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CalculateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("calculateDate");

                    b.Property<int>("Flags")
                        .HasColumnType("int")
                        .HasColumnName("flags");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<int>("Quarter")
                        .HasColumnType("int")
                        .HasColumnName("quarter");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("ConsolidateReportCatalogs", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birthDate");

                    b.Property<DateTime?>("DismissalDate")
                        .HasColumnType("date")
                        .HasColumnName("dismissalDate");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("date")
                        .HasColumnName("entryDate");

                    b.Property<string>("FirstName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("firstName");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasColumnName("grade");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("lastName");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("middleName");

                    b.Property<DateTime?>("PensionDate")
                        .HasColumnType("date")
                        .HasColumnName("pensionDate");

                    b.Property<int?>("Seniority")
                        .HasColumnType("int")
                        .HasColumnName("seniority");

                    b.Property<int>("Sex")
                        .HasColumnType("int")
                        .HasColumnName("sex");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("taxIdentificationNumber");

                    b.HasKey("Id");

                    b.ToTable("EmployeeCards", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeCardStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CardStatusTypeId")
                        .HasColumnType("int")
                        .HasColumnName("cardStatusTypeId");

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnType("date")
                        .HasColumnName("periodBegin");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("date")
                        .HasColumnName("periodEnd");

                    b.HasKey("Id");

                    b.HasIndex("CardStatusTypeId");

                    b.HasIndex("EmployeeCardId");

                    b.ToTable("EmployeeCardStatuses", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeChildren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnType("date")
                        .HasColumnName("periodBegin");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("date")
                        .HasColumnName("periodEnd");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeCardId");

                    b.ToTable("EmployeeChildren", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeDisability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnType("date")
                        .HasColumnName("periodBegin");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("date")
                        .HasColumnName("periodEnd");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeCardId");

                    b.ToTable("EmployeeDisabilities", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeSpecialSeniority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnType("date")
                        .HasColumnName("periodBegin");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("date")
                        .HasColumnName("periodEnd");

                    b.Property<int>("SpecialSeniorityId")
                        .HasColumnType("int")
                        .HasColumnName("specialSeniorityId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeCardId");

                    b.HasIndex("SpecialSeniorityId");

                    b.ToTable("EmployeeSpecialSeniorities", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeTaxRelief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnType("date")
                        .HasColumnName("periodBegin");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("date")
                        .HasColumnName("periodEnd");

                    b.Property<decimal>("Сoefficient")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("coefficient");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeCardId");

                    b.ToTable("EmployeeTaxReliefs", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListAdditionalAccrualType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<int>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("flags");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_ListAdditionalAccrualTypes_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListAdditionalAccrualTypes", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListAdditionalPaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_ListAdditionalPaymentTypes_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListAdditionalPaymentTypes", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListAdministration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fullName");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("positionId");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("taxIdentificationNumber");

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telephoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("ListAdministrations", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListCardStatusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_ListCardStatusTypes_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListCardStatusTypes", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_ListDepartments_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListDepartments", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListGradeAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentId");

                    b.Property<int>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("flags");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasColumnName("grade");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<decimal>("Percent")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("percent");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex(new[] { "Code" }, "IX_ListGradeAllowances_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListGradeAllowances", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListLivingWage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnType("date")
                        .HasColumnName("periodBegin");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("date")
                        .HasColumnName("periodEnd");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id");

                    b.ToTable("ListLivingWages", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListMinimumSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnType("date")
                        .HasColumnName("periodBegin");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("date")
                        .HasColumnName("periodEnd");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id");

                    b.ToTable("ListMinimumSalaries", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListOtherAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<int>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("flags");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<decimal>("Percent")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("percent");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_ListOtherAllowances_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListOtherAllowances", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListPensionAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<int>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("flags");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<decimal>("Percent")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("percent");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_ListPensionAllowances_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListPensionAllowances", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_ListPositions_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListPositions", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListSocialBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("LimitSum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("limitSum");

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnType("date")
                        .HasColumnName("periodBegin");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("date")
                        .HasColumnName("periodEnd");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id");

                    b.ToTable("ListSocialBenefits", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListSpecialSeniority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<string>("ReasonCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("reasonCode");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_ListSpecialSeniorities_Code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("ListSpecialSeniorities", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeCardId");

                    b.HasIndex(new[] { "AccountingPeriod" }, "IX_Payments_AccountingPeriod");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<decimal>("BaseSum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("baseSum");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentId");

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<int?>("GradeAllowanceId")
                        .HasColumnType("int")
                        .HasColumnName("gradeAllowanceId");

                    b.Property<decimal>("GradeAllowanceSum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("gradeAllowanceSum");

                    b.Property<decimal>("Hours")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("hours");

                    b.Property<int?>("OtherAllowanceId")
                        .HasColumnType("int")
                        .HasColumnName("otherAllowanceId");

                    b.Property<decimal>("OtherAllowanceSum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("otherAllowanceSum");

                    b.Property<int?>("PensionAllowanceId")
                        .HasColumnType("int")
                        .HasColumnName("pensionAllowanceId");

                    b.Property<decimal>("PensionAllowanceSum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("pensionAllowanceSum");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("totalSum");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCardId");

                    b.HasIndex("GradeAllowanceId");

                    b.HasIndex("OtherAllowanceId");

                    b.HasIndex("PensionAllowanceId");

                    b.HasIndex(new[] { "AccountingPeriod" }, "IX_Salaries_AccountingPeriod");

                    b.HasIndex(new[] { "AccountingPeriod", "DepartmentId" }, "IX_Salaries_AccountingPeriod_DepartmentId");

                    b.ToTable("Salaries", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.SickList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<DateTime>("AccrualPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accrualPeriod");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentId");

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<int>("EnterpriseDays")
                        .HasColumnType("int")
                        .HasColumnName("enterpriseDays");

                    b.Property<decimal>("EnterpriseSum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("enterpriseSum");

                    b.Property<int>("SocialInsuranceDays")
                        .HasColumnType("int")
                        .HasColumnName("socialInsuranceDays");

                    b.Property<decimal>("SocialInsuranceSum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("socialInsuranceSum");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCardId");

                    b.HasIndex(new[] { "AccountingPeriod" }, "IX_SickLists_AccountingPeriod");

                    b.HasIndex(new[] { "AccountingPeriod", "DepartmentId" }, "IX_SickLists_AccountingPeriod_DepartmentId");

                    b.ToTable("SickLists", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.Vocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccountingPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accountingPeriod");

                    b.Property<DateTime>("AccrualPeriod")
                        .HasColumnType("date")
                        .HasColumnName("accrualPeriod");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentId");

                    b.Property<int>("EmployeeCardId")
                        .HasColumnType("int")
                        .HasColumnName("employeeCardId");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCardId");

                    b.HasIndex(new[] { "AccountingPeriod" }, "IX_Vocations_AccountingPeriod");

                    b.HasIndex(new[] { "AccountingPeriod", "DepartmentId" }, "IX_Vocations_AccountingPeriod_DepartmentId");

                    b.ToTable("Vocations", (string)null);
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.AdditionalAccrual", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListAdditionalAccrualType", "AdditionalAccrualType")
                        .WithMany("AdditionalAccruals")
                        .HasForeignKey("AdditionalAccrualTypeId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.ListDepartment", "Department")
                        .WithMany("AdditionalAccruals")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("AdditionalAccruals")
                        .HasForeignKey("EmployeeCardId")
                        .IsRequired();

                    b.Navigation("AdditionalAccrualType");

                    b.Navigation("Department");

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.AdditionalPayment", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListAdditionalPaymentType", "AdditionalPaymentType")
                        .WithMany("AdditionalPayments")
                        .HasForeignKey("AdditionalPaymentTypeId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("AdditionalPayments")
                        .HasForeignKey("EmployeeCardId")
                        .IsRequired();

                    b.Navigation("AdditionalPaymentType");

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.CivilLawContract", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListDepartment", "Department")
                        .WithMany("CivilLawContracts")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("CivilLawContracts")
                        .HasForeignKey("EmployeeCardId")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ConsolidateReportAppendix1", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ConsolidateReportCatalog", "ConsolidateReportCatalog")
                        .WithMany("ConsolidateReportAppendix1s")
                        .HasForeignKey("ConsolidateReportCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsolidateReportCatalog");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ConsolidateReportAppendix4", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ConsolidateReportCatalog", "ConsolidateReportCatalog")
                        .WithMany("ConsolidateReportAppendix4s")
                        .HasForeignKey("ConsolidateReportCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsolidateReportCatalog");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ConsolidateReportAppendix6", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ConsolidateReportCatalog", null)
                        .WithMany("ConsolidateReportAppendix6s")
                        .HasForeignKey("ConsolidateReportCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeCardStatus", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListCardStatusType", "CardStatusType")
                        .WithMany("EmployeeCardStatuses")
                        .HasForeignKey("CardStatusTypeId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("EmployeeCardStatuses")
                        .HasForeignKey("EmployeeCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardStatusType");

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeChildren", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("EmployeeChildren")
                        .HasForeignKey("EmployeeCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeDisability", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("EmployeeDisabilities")
                        .HasForeignKey("EmployeeCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeSpecialSeniority", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("EmployeeSpecialSeniorities")
                        .HasForeignKey("EmployeeCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.ListSpecialSeniority", "SpecialSeniority")
                        .WithMany("EmployeeSpecialSeniorities")
                        .HasForeignKey("SpecialSeniorityId")
                        .IsRequired();

                    b.Navigation("EmployeeCard");

                    b.Navigation("SpecialSeniority");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeTaxRelief", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("EmployeeTaxReliefs")
                        .HasForeignKey("EmployeeCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListAdministration", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListPosition", "Position")
                        .WithMany("Administrations")
                        .HasForeignKey("PositionId")
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListGradeAllowance", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListDepartment", "Department")
                        .WithMany("GradeAllowances")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.Payment", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("Payments")
                        .HasForeignKey("EmployeeCardId")
                        .IsRequired();

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.Salary", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListDepartment", "Department")
                        .WithMany("Salaries")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeCardId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.ListGradeAllowance", "GradeAllowance")
                        .WithMany("Salaries")
                        .HasForeignKey("GradeAllowanceId");

                    b.HasOne("Coolbuh.Core.Entities.Models.ListOtherAllowance", "OtherAllowance")
                        .WithMany("Salaries")
                        .HasForeignKey("OtherAllowanceId");

                    b.HasOne("Coolbuh.Core.Entities.Models.ListPensionAllowance", "PensionAllowance")
                        .WithMany("Salaries")
                        .HasForeignKey("PensionAllowanceId");

                    b.Navigation("Department");

                    b.Navigation("EmployeeCard");

                    b.Navigation("GradeAllowance");

                    b.Navigation("OtherAllowance");

                    b.Navigation("PensionAllowance");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.SickList", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListDepartment", "Department")
                        .WithMany("SickLists")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("SickLists")
                        .HasForeignKey("EmployeeCardId")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.Vocation", b =>
                {
                    b.HasOne("Coolbuh.Core.Entities.Models.ListDepartment", "Department")
                        .WithMany("Vocations")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.HasOne("Coolbuh.Core.Entities.Models.EmployeeCard", "EmployeeCard")
                        .WithMany("Vocations")
                        .HasForeignKey("EmployeeCardId")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EmployeeCard");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ConsolidateReportCatalog", b =>
                {
                    b.Navigation("ConsolidateReportAppendix1s");

                    b.Navigation("ConsolidateReportAppendix4s");

                    b.Navigation("ConsolidateReportAppendix6s");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.EmployeeCard", b =>
                {
                    b.Navigation("AdditionalAccruals");

                    b.Navigation("AdditionalPayments");

                    b.Navigation("CivilLawContracts");

                    b.Navigation("EmployeeCardStatuses");

                    b.Navigation("EmployeeChildren");

                    b.Navigation("EmployeeDisabilities");

                    b.Navigation("EmployeeSpecialSeniorities");

                    b.Navigation("EmployeeTaxReliefs");

                    b.Navigation("Payments");

                    b.Navigation("Salaries");

                    b.Navigation("SickLists");

                    b.Navigation("Vocations");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListAdditionalAccrualType", b =>
                {
                    b.Navigation("AdditionalAccruals");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListAdditionalPaymentType", b =>
                {
                    b.Navigation("AdditionalPayments");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListCardStatusType", b =>
                {
                    b.Navigation("EmployeeCardStatuses");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListDepartment", b =>
                {
                    b.Navigation("AdditionalAccruals");

                    b.Navigation("CivilLawContracts");

                    b.Navigation("GradeAllowances");

                    b.Navigation("Salaries");

                    b.Navigation("SickLists");

                    b.Navigation("Vocations");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListGradeAllowance", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListOtherAllowance", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListPensionAllowance", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListPosition", b =>
                {
                    b.Navigation("Administrations");
                });

            modelBuilder.Entity("Coolbuh.Core.Entities.Models.ListSpecialSeniority", b =>
                {
                    b.Navigation("EmployeeSpecialSeniorities");
                });
#pragma warning restore 612, 618
        }
    }
}
